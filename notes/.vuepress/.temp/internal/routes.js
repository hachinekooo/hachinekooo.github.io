export const redirects = JSON.parse("{}")

export const routes = Object.fromEntries([
  ["/", { loader: () => import(/* webpackChunkName: "index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/index.html.js"), meta: {"title":"主页","icon":"home"} }],
  ["/intro.html", { loader: () => import(/* webpackChunkName: "intro.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/intro.html.js"), meta: {"date":1743689344000,"excerpt":"<blockquote>\n<p>职业发展意向：资深 Java Coder</p>\n</blockquote>\n<blockquote>\n<p>主要编程语言：Java</p>\n</blockquote>\n","readingTime":{"minutes":0.12,"words":36},"title":"悲观者永远正确，乐观者永远前行","icon":"circle-info","type":"article"} }],
  ["/docs/Saysomething.html", { loader: () => import(/* webpackChunkName: "docs_Saysomething.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/Saysomething.html.js"), meta: {"date":1743689344000,"excerpt":"<p>大道至简...知易行难</p>\n","readingTime":{"minutes":0.03,"words":9},"title":"","type":"article"} }],
  ["/templater/note.html", { loader: () => import(/* webpackChunkName: "templater_note.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/templater/note.html.js"), meta: {"date":1743689344000,"excerpt":"<h2></h2>\n","readingTime":{"minutes":0.03,"words":8},"title":"","icon":"file","order":null,"type":"article"} }],
  ["/docs/code/knowledge/algorithm.html", { loader: () => import(/* webpackChunkName: "docs_code_knowledge_algorithm.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/knowledge/algorithm.html.js"), meta: {"date":1743689344000,"category":["算法"],"tag":["LeetCode"],"excerpt":"<h2>方法技巧总结</h2>\n<h3>深度优先搜索(回溯)算法</h3>\n<ol>\n<li>\n<p><strong>适用场景</strong>：</p>\n<ul>\n<li>连通性问题（如岛屿问题）</li>\n<li>路径搜索</li>\n<li>组合/排列问题</li>\n</ul>\n</li>\n<li>\n<p><strong>实现要点</strong>：</p>\n<ul>\n<li>清晰的递归终止条件</li>\n<li>标记已访问的节点，避免重复访问</li>\n<li>四向或八向探索（对于网格问题）</li>\n<li>回溯时恢复状态（某些情况需要）</li>\n</ul>\n</li>\n<li>\n<p><strong>优化技巧</strong>：</p>\n<ul>\n<li>直接在原数组上标记已访问状态，节省空间</li>\n<li>提前判断边界条件，减少不必要的递归(枝剪)</li>\n</ul>\n</li>\n<li>\n<p>例子：岛屿的最大面积（LeetCode 695）\n<strong>问题</strong>：给定一个二维数组，其中 1 表示陆地，0 表示水域，找出最大的岛屿面积。</p>\n</li>\n</ol>","readingTime":{"minutes":15.05,"words":4514},"title":"常见的算法思路","icon":"file","order":null,"type":"article"} }],
  ["/docs/code/knowledge/git-problems-and-fixes.html", { loader: () => import(/* webpackChunkName: "docs_code_knowledge_git-problems-and-fixes.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/knowledge/git-problems-and-fixes.html.js"), meta: {"date":1745884800000,"category":["知识"],"tag":["Git"],"excerpt":"<h2>团队开发时分支和提交消息书写格式</h2>\n<h3>分支</h3>\n<table>\n<thead>\n<tr>\n<th><strong>类型前缀</strong></th>\n<th><strong>说明</strong></th>\n<th><strong>示例</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>feature/</td>\n<td>新功能</td>\n<td>feature/添加用户 API</td>\n</tr>\n<tr>\n<td>fix/</td>\n<td>修复 bug</td>\n<td>fix/修复用户登陆失败</td>\n</tr>\n<tr>\n<td>refactor/</td>\n<td>重构，不影响业务</td>\n<td>refactor/重构订单服务</td>\n</tr>\n<tr>\n<td>hotfix/</td>\n<td>紧急修复生产问题</td>\n<td>hotfix/修复空指针问题</td>\n</tr>\n<tr>\n<td>test/</td>\n<td>测试相关</td>\n<td>test/测试用户服务</td>\n</tr>\n<tr>\n<td>chore/</td>\n<td>杂项、构建脚本、文档</td>\n<td>chore/更新 readme</td>\n</tr>\n</tbody>\n</table>","readingTime":{"minutes":4.2,"words":1260},"title":"Git 如何在本地隐藏文件改动但继续追踪管理（使用 assume-unchanged）","icon":"file","order":null,"type":"article"} }],
  ["/docs/code/knowledge/gitBasic.html", { loader: () => import(/* webpackChunkName: "docs_code_knowledge_gitBasic.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/knowledge/gitBasic.html.js"), meta: {"date":1743689344000,"category":["知识"],"tag":["Git"],"excerpt":"<h3>添加文件到忽略列表</h3>\n<p>一般我们总会有些文件无需纳入Git的管理，也不希望它们总出现在未跟踪文件列表。 通常都是些自动生成的文件，比如日志文件，或者编译过程中创建的临时文件等。 在这种情况下，我们可以在工作目录中创建一个名为 .gitignore的文件（文件名称固定），列出要忽略的文件模式。</p>\n<p>通常开发工具会帮我们生成。</p>\n<h2>远程仓库</h2>\n<h3>注册 gitee/github</h3>\n<h3>配置 SSH</h3>\n<h4>在本地生成密钥</h4>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ssh-keygen</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -t</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> rsa</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -C</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"your email@example.com\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">//引号里面填写你的邮箱地址，比如我的是</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ssh-keygen</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -t</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> rsa</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -C</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"xxxxx@163.com\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","readingTime":{"minutes":3.52,"words":1055},"title":"Git基本知识","icon":"file","order":null,"type":"article"} }],
  ["/docs/code/knowledge/pattern.html", { loader: () => import(/* webpackChunkName: "docs_code_knowledge_pattern.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/knowledge/pattern.html.js"), meta: {"date":1727827200000,"excerpt":"<h2>单例设计模式</h2>\n<h3>饿汉式</h3>\n<p><code>SingleModel1.java</code></p>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> SingleModel1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    //使用 static ，让类在加载时就直接创建好一个对象。  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> SingleModel1</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> obj </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> SingleModel1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">      </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    //构造方法，私有之后，让外不能随便调用这里进行创建对象了。  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> SingleModel1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(){  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">          </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    //static 才能访问 static，public公共的供外调用  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> SingleModel1</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> getInstance</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">()</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> obj;  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","readingTime":{"minutes":15.43,"words":4629},"title":"设计模式","icon":"file","order":null,"type":"article"} }],
  ["/docs/code/knowledge/regularExpression.html", { loader: () => import(/* webpackChunkName: "docs_code_knowledge_regularExpression.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/knowledge/regularExpression.html.js"), meta: {"date":1705708800000,"category":["知识"],"excerpt":"<ol>\n<li>\n<p>任意一个字符表示匹配任意对应的字符，如 <code>a</code> 匹配 <code>a</code>，<code>7</code>匹配<code>7</code>，<code>-</code>匹配<code>-</code>。</p>\n</li>\n<li>\n<p><code>[]</code>代表匹配中括号中其中任一个字符，如<code>[abc]</code>匹配 <code>a</code> 或 <code>b</code> 或 <code>c</code>。</p>\n</li>\n<li>\n<p><code>-</code>在中括号里面和外面代表含义不同，如在外时，就匹配<code>-</code>，如果在中括号内<code>[a-b]</code>表示匹配26个小写字母中的任一个；<code>[a-zA-Z]</code>匹配大小写共52个字母中任一个；<code>[0-9]</code>匹配十个数字中任一个。</p>\n</li>\n<li>\n<p><code>^</code> 在中括号里面和外面含义不同，如在外时，就表示开头，如 <code>^7[0-9]</code> 表示匹配开头是7的，且第二位是任一数字的字符串；如果在中括号里面，表示除了这个字符之外的任意字符(包括数字，特殊字符)，如 <code>[^abc]</code> 表示匹配除去 abc 之外的其他任一字符。</p>\n</li>\n<li>\n<p><code>.</code>表示匹配。</p>\n</li>\n<li>\n<p><code>\\d</code> 表示。</p>\n</li>\n<li>\n<p><code>\\D</code> 表示。</p>\n</li>\n</ol>","readingTime":{"minutes":3.2,"words":959},"title":"正则表达式","icon":"file","order":null,"type":"article"} }],
  ["/docs/code/frontend/requestInterfaceComponent.html", { loader: () => import(/* webpackChunkName: "docs_code_frontend_requestInterfaceComponent.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/frontend/requestInterfaceComponent.html.js"), meta: {"date":1704412800000,"excerpt":"<h2></h2>\n<p>自定义组件：</p>\n<div class=\"language-vue line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"vue\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">template</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">div</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">p</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> id</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"custom-text\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;{{ hitokoto }}&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">p</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">p</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> v-if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">author</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;— {{ author }}&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">p</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">div</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">template</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">export</span><span style=\"--shiki-light:#E45649;--shiki-dark:#C678DD\"> default</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  data</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      hitokoto</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ''</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 存储获取的文字</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      author</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ''</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 存储来源</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    };</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  async</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> mounted</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 异步请求数据</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    await</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getHitokoto</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  methods</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    async</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> getHitokoto</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">      try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> response</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> await</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> fetch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'https://v1.hitokoto.cn'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> data</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> await</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> response</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">json</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">hitokoto</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> data</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">hitokoto</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">author</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> data</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">from</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      } </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">error</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">        console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">error</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'Failed to fetch hitokoto:'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">error</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","readingTime":{"minutes":0.94,"words":281},"title":"VuePress使用自定义组件实现请求接口并放入md","icon":"file","order":null,"type":"article"} }],
  ["/docs/code/server/nginxBasic.html", { loader: () => import(/* webpackChunkName: "docs_code_server_nginxBasic.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/server/nginxBasic.html.js"), meta: {"date":1705276800000,"category":["服务器"],"tag":["nginx"],"excerpt":"<h2>什么是 nginx</h2>\n<blockquote>\n<p>Nginx 是一款<strong>轻量级</strong>的 Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，特点是占有内存少、并发能力强。Nginx 高并发能力强大、支持热不熟、启动简单。</p>\n</blockquote>\n<h2>Nginx 的反向代理</h2>\n<h3>什么是正向/反向代理</h3>\n<figure><figcaption>forwardProxyAndReverseProxy</figcaption></figure>\n<ul>\n<li>正向代理，即在我们电脑本地上配置的一个代理，我们将使用我们自己配置的这个代理来帮我们去访问目标站点。举一个简单的例子，我们想要访问 X（推特）、Github 的时候，正常情况下国内是很慢或者无法访问的，但是我们可以在我们的电脑上配置一个代理服务器，让他帮我们去访问然后就 X 网站返回的内容交给我们本地电脑进行显示。</li>\n<li>反向代理，现在代理服务器的配置不再由我们自己配置，而是由服务器那边人员去进行配置。同样的，配置代理服务器的目的也是为了提高访问体验。服务器那边配置好代理服务器后，当我们请求时请求的是代理服务器，而代理服务器会根据各个服务器的负载情况，动态的分配我们这次请求的流量往哪里走。Nginx 不但解决了向各个服务器的流量动态分发，还解决了在服务器之间共享 session 的问题。</li>\n</ul>","readingTime":{"minutes":3.6,"words":1081},"title":"nginx基本知识","icon":"file","order":null,"type":"article"} }],
  ["/docs/code/backend/java/IdentityAuthentication.html", { loader: () => import(/* webpackChunkName: "docs_code_backend_java_IdentityAuthentication.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/backend/java/IdentityAuthentication.html.js"), meta: {"date":1743689344000,"category":["Java"],"excerpt":"<h2>传统 SESSION 式</h2>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">RequestMapping</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">path</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"/login\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> String</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> login</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> uname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> HttpSession</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> httpSession) {  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">    httpSession</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setAttribute</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"name\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, uname);</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"欢迎登录：\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> uname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">RequestMapping</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">path</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"/get\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">)  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> String</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> get</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> uname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> HttpSession</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> httpSession) {  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"获取session：\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> httpSession</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getAttribute</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"name\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","readingTime":{"minutes":1.5,"words":450},"title":"常见的身份验证方案","icon":"file","order":null,"type":"article"} }],
  ["/docs/code/backend/java/JavaBasic.html", { loader: () => import(/* webpackChunkName: "docs_code_backend_java_JavaBasic.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/backend/java/JavaBasic.html.js"), meta: {"date":1704326400000,"category":["Java"],"excerpt":"<h2>Idea</h2>\n<h3>基本配置</h3>\n<h3>debug</h3>\n<p>蓝色背景色：下一步运行的\n红色背景色：已经运行的</p>\n<h2>编译和运行</h2>\n<ul>\n<li><strong>java 文件</strong>：这个就是源文件。例如 <code>test. java</code></li>\n</ul>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Test</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">\tpublic</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> main</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[] </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">args</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">\t\tSystem</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">out</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">println</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"hello,world\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">\t}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","readingTime":{"minutes":131.94,"words":39581},"title":"Java基础","icon":"file","order":null,"type":"article"} }],
  ["/docs/code/backend/java/changeJDKByJenv.html", { loader: () => import(/* webpackChunkName: "docs_code_backend_java_changeJDKByJenv.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/backend/java/changeJDKByJenv.html.js"), meta: {"date":1704240000000,"category":["Java"],"tag":["环境配置"],"excerpt":"<h2>什么是 jenv</h2>\n<blockquote>\n<p>jEnv is a command line tool to help you forget how to set the JAVA_HOME environment variable</p>\n</blockquote>\n<p>jenv 是一个好用到帮助你忘记如何设置 JAVA_HOME 环境变量的命令行工具，</p>\n<h2>安装</h2>\n<div class=\"language-shell line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shell\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">## 安装 jenv</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">brew</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> instal</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> jenv</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","readingTime":{"minutes":0.99,"words":297},"title":"在Mac中使用Jenv切换JDK版本","icon":"file","order":null,"type":"article"} }],
  ["/docs/code/backend/java/echo-pattern-in-request-processing.html", { loader: () => import(/* webpackChunkName: "docs_code_backend_java_echo-pattern-in-request-processing.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/backend/java/echo-pattern-in-request-processing.html.js"), meta: {"date":1745712000000,"excerpt":"<h2>1. 引言</h2>\n<p>在现代 Web 应用开发中，请求处理流程的复杂性日益增长。从简单的 CRUD 操作到复杂的业务逻辑处理，每一个 HTTP 请求都需要经历多个处理层次：跨域处理、身份认证、权限校验、参数验证、业务逻辑执行、日志记录等。这些横切关注点的处理通常依赖于 Spring 框架提供的过滤器（Filter）和拦截器（Interceptor）机制。</p>\n<p>然而，在实际开发过程中，我们经常遇到这样的困境：过滤器虽然执行得最早，但无法获取到控制器的详细信息；拦截器能够访问 HandlerMethod 等丰富的上下文，却无法将这些信息有效地传递回过滤器层进行统一处理。这种单向的信息流动限制了我们在架构设计上的灵活性。</p>","readingTime":{"minutes":5.02,"words":1505},"title":"请求处理流中的\"回响模式\"：利用拦截器为过滤器提供上下文","icon":"file","order":null,"type":"article"} }],
  ["/docs/code/backend/java/javaEnhance.html", { loader: () => import(/* webpackChunkName: "docs_code_backend_java_javaEnhance.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/backend/java/javaEnhance.html.js"), meta: {"date":1706659200000,"category":["Java"],"excerpt":"<h2>IO</h2>\n<p><code>I/O</code>技术用于处理设备之间的数据传输</p>\n<blockquote>\n<p><code>IO流</code>是一组有序的，有起点和终点的数据集合，是对数据传输的总称和抽象。</p>\n</blockquote>\n<p><code>IO</code> 流的源和目的地：</p>\n<ul>\n<li>内存</li>\n<li>控制台</li>\n<li>磁盘文件</li>\n<li>网络端点</li>\n</ul>\n<p>关于 <code>Input</code> 和 <code>Output</code>：</p>\n<ul>\n<li><code>Input</code> 读取外部数据(磁盘、光盘等存储设备的数据)到程序()中；</li>\n<li><code>Output</code> 将程序()数据输出到磁盘、光盘等存储设备中。</li>\n</ul>","readingTime":{"minutes":49.33,"words":14798},"title":"Java高级","icon":"file","order":null,"type":"article"} }],
  ["/docs/code/backend/java/javaWeb.html", { loader: () => import(/* webpackChunkName: "docs_code_backend_java_javaWeb.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/backend/java/javaWeb.html.js"), meta: {"date":1707177600000,"category":["Java"],"tag":["JavaWeb"],"excerpt":"<h2>Web 服务器</h2>\n<blockquote>\n<p>Ps:基于 <code>macos</code> 搭建</p>\n</blockquote>\n<h3>Tomcat</h3>\n<h4>下载</h4>\n<p><a href=\"https://archive.apache.org/dist/tomcat/tomcat-8/v8.5.94/bin/\" target=\"_blank\" rel=\"noopener noreferrer\">tomcat-v8.5.94</a>\n<code>macos/linux</code> 下载 <code>apache-tomcat-8.5.94.tar.gz</code></p>","readingTime":{"minutes":45.51,"words":13652},"title":"传统JavaWeb","icon":"file","order":null,"type":"article"} }],
  ["/docs/code/backend/java/mltiThreading.html", { loader: () => import(/* webpackChunkName: "docs_code_backend_java_mltiThreading.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/backend/java/mltiThreading.html.js"), meta: {"date":1743689344000,"category":["Java"],"tag":["多线程"],"excerpt":"<h2>ThreadLocal</h2>\n<h3>ThreadLocal 的实现原理</h3>\n<p>ThreadLocal 本质上是一个线程隔离的变量存储机制，它的核心实现主要依赖以下几个关键部分：</p>\n<ol>\n<li>\n<p>ThreadLocal 对象本身不存储值，而是作为一个 key 来访问<code>线程中的ThreadLocalMap</code></p>\n</li>\n<li>\n<p>Thread 类中有一个 ThreadLocalMap 类型的成员变量 threadLocals:</p>\n</li>\n</ol>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> Thread</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    ThreadLocalMap</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> threadLocals </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> null</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    //...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","readingTime":{"minutes":3.98,"words":1194},"title":"Java多线程","icon":"file","order":null,"type":"article"} }],
  ["/docs/code/backend/java/multiEnvConfig.html", { loader: () => import(/* webpackChunkName: "docs_code_backend_java_multiEnvConfig.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/backend/java/multiEnvConfig.html.js"), meta: {"date":1743689344000,"category":["Java"],"tag":["JavaWeb","Spring","SpringBoot"],"excerpt":"<blockquote>\n<p>[!tips]\nspring boot 2.4 之后为了提升对 kubernetes 的支持，整个 spring.profiles 作废了；因此我们可以通过 spring.config.import 来代替它</p>\n</blockquote>\n<h2>命令行指定</h2>\n<ul>\n<li><code>java -jar your-application.jar --spring.profiles.active=dev,biz</code></li>\n</ul>\n<p>右侧的配置会覆盖左侧的配置所以 biz 配置会覆盖 dev 配置两个 profile 的配置都会覆盖默认配置文件中的值</p>","readingTime":{"minutes":1.34,"words":403},"title":"SpringBoot环境配置的两种方式","icon":"file","order":null,"type":"article"} }],
  ["/docs/code/backend/java/mybatis-plus-service-pattern-comparison.html", { loader: () => import(/* webpackChunkName: "docs_code_backend_java_mybatis-plus-service-pattern-comparison.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/backend/java/mybatis-plus-service-pattern-comparison.html.js"), meta: {"date":1717977600000,"category":["Java"],"tag":["MyBatisPlus","MyBatis"],"excerpt":"<h2>继承 or 组合</h2>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 共用的实体类和Mapper</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Data</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> UserFoot</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> interface</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> UserFootMapper</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> extends</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> BaseMapper</span><span style=\"--shiki-light:#C18401;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">UserFoot</span><span style=\"--shiki-light:#C18401;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 方式1：直接继承IService方式</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> interface</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> UserFootService</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> extends</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> IService</span><span style=\"--shiki-light:#C18401;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">UserFoot</span><span style=\"--shiki-light:#C18401;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 自定义业务方法</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    List</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">UserFoot</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> getUserFootprints</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Long</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> userId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Service</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> UserFootServiceImpl</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> extends</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> ServiceImpl</span><span style=\"--shiki-light:#C18401;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">UserFootMapper</span><span style=\"--shiki-light:#C18401;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> UserFoot</span><span style=\"--shiki-light:#C18401;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E06C75\"> </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        implements</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> UserFootService</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 可以注入其他Mapper或Service</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Autowired</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> UserMapper</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> userMapper</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> List</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">UserFoot</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> getUserFootprints</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Long</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> userId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">        // 直接使用继承的方法</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">list</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> LambdaQueryWrapper</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">UserFoot</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;()</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">eq</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(UserFoot</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">::</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">getUserId, userId)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">orderByDesc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(UserFoot</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">::</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">getCreateTime));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 方式2：组合Dao方式</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> UserFootDao</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> extends</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> ServiceImpl</span><span style=\"--shiki-light:#C18401;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">UserFootMapper</span><span style=\"--shiki-light:#C18401;--shiki-dark:#ABB2BF\">,</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> UserFoot</span><span style=\"--shiki-light:#C18401;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 在Dao层封装数据库操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> List</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">UserFoot</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> findByUserId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Long</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> userId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> list</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">new</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> LambdaQueryWrapper</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">UserFoot</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;()</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">eq</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(UserFoot</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">::</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">getUserId, userId)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">                .</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">orderByDesc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(UserFoot</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">::</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">getCreateTime));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> interface</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> UserFootService</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 定义业务方法</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">    List</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">UserFoot</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> getUserFootprints</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Long</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> userId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">@</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Service</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> UserFootServiceImpl</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> implements</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> UserFootService</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> UserFootDao</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> userFootDao</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    private</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> final</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> UserMapper</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> userMapper</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // 同样可以注入其他依赖</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Autowired</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> UserFootServiceImpl</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">UserFootDao</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> userFootDao</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">UserMapper</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> userMapper</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">userFootDao</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> userFootDao;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">        this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">userMapper</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> userMapper;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    @</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#E5C07B\">Override</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> List</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&lt;</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">UserFoot</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&gt;</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> getUserFootprints</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">Long</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> userId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">        // 通过dao进行数据操作</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        return</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> userFootDao</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">findByUserId</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(userId);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","readingTime":{"minutes":2.48,"words":743},"title":"MyBatis-Plus在Service层的两种实现方式对比：继承与组合模式的选择","icon":"file","order":null,"type":"article"} }],
  ["/docs/code/backend/java/spring.html", { loader: () => import(/* webpackChunkName: "docs_code_backend_java_spring.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/backend/java/spring.html.js"), meta: {"date":1706832000000,"category":["Java"],"tag":["框架"],"excerpt":"<h2>简介</h2>\n<ul>\n<li>Spring 是分层的 Java SE/EE 应用 full-stack 轻量级开源框架，以 <a href=\"#%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC\">IOC</a> 和 <a href=\"#AOP\">AOP</a> 为内核。</li>\n<li>Spring 底层用的是反射。</li>\n<li>Spring在创建Bean时，会优先选择使用无参构造方法来实例化对象。</li>\n</ul>\n<h2>快速入门</h2>\n<h3>在 Maven 工程中导入相关依赖</h3>\n<p><code>pom.xml</code></p>","readingTime":{"minutes":26.77,"words":8031},"title":"Spring快速入门","icon":"file","order":null,"type":"article"} }],
  ["/docs/code/backend/java/springEnhance.html", { loader: () => import(/* webpackChunkName: "docs_code_backend_java_springEnhance.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/backend/java/springEnhance.html.js"), meta: {"date":1743689344000,"category":["Java"],"tag":["JavaWeb"],"excerpt":"<h2>容器接口和Bean</h2>\n<blockquote>\n<p><code>BeanFactory</code> 提供的基本功能，<code>ApplicationContext</code> 在 <code>BeanFactory</code> 的基础上扩展功能</p>\n</blockquote>\n<h3>ApplicationContext</h3>\n<blockquote>\n<p>是 <code>BeanFactory</code> 的子接口。它扩展了 <code>BeanFactory</code> 接口的功能</p>\n</blockquote>\n<ul>\n<li>国际化</li>\n<li>通配符方式获取一组 Resource 资源</li>\n<li>整合 Environment 环境（能通过它获取各种来源的配置信息）</li>\n<li>事件发布与监听，实现组件之间的解耦</li>\n</ul>","readingTime":{"minutes":29.15,"words":8745},"title":"Spring高级","icon":"file","order":null,"type":"article"} }],
  ["/docs/code/backend/java/springboot-version-controll.html", { loader: () => import(/* webpackChunkName: "docs_code_backend_java_springboot-version-controll.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/backend/java/springboot-version-controll.html.js"), meta: {"date":1745539200000,"category":["Java"],"tag":["SpringBoot"],"excerpt":"<h2>使用 BOM 依赖管理</h2>\n<h3>什么是BOM</h3>\n<p>BOM（Bill of Materials） 是 Maven 中的一种依赖管理机制，主要用于集中管理项目中所有依赖的版本号。它的核心作用是确保项目中的依赖版本一致，避免因版本冲突导致的问题。\n在 Maven 中，BOM 是一个特殊的 POM 文件，通常以 <code>&lt;packaging&gt;pom&lt;/packaging&gt;</code> 的形式存在，并通过 <code>&lt;dependencyManagement&gt;</code> 定义一组依赖及其版本号。其他模块可以通过 import 的方式引入这个 BOM，从而继承其中定义的依赖版本。</p>","readingTime":{"minutes":2.92,"words":875},"title":"SpringBoot项目版本管理的几种方式","icon":"file","order":null,"type":"article"} }],
  ["/docs/code/backend/java/string.html", { loader: () => import(/* webpackChunkName: "docs_code_backend_java_string.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/backend/java/string.html.js"), meta: {"date":1743689344000,"category":["Java"],"tag":["面经"],"excerpt":"<h2>abc和new</h2>\n<div class=\"language-java line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"java\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> class</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\"> StringTest</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    public</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> static</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> void</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> main</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[] </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">args</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> str1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"abc\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;  </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 仅在常量池中创建对象  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#C18401;--shiki-dark:#E5C07B\">        String</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> str2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> String</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"abc\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);  </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 可能创建1个或2个对象  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        }</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","readingTime":{"minutes":1.88,"words":565},"title":"new String(\"abc\")时对象是如何创建的？","icon":"file","order":null,"type":"article"} }],
  ["/docs/code/backend/java/useCombineNotExtend.html", { loader: () => import(/* webpackChunkName: "docs_code_backend_java_useCombineNotExtend.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/backend/java/useCombineNotExtend.html.js"), meta: {"date":1743689344000,"category":["Java"],"tag":["设计模式"],"excerpt":"<p>例子：电子商务订单处理系统\n1.\t支付方式类（支付宝、微信支付、信用卡支付）</p>\n<div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>// 支付接口</span></span>\n<span class=\"line\"><span>interface PaymentMethod {</span></span>\n<span class=\"line\"><span>    void pay(double amount);</span></span>\n<span class=\"line\"><span>}</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>// 支付宝支付</span></span>\n<span class=\"line\"><span>class Alipay implements PaymentMethod {</span></span>\n<span class=\"line\"><span>    @Override</span></span>\n<span class=\"line\"><span>    public void pay(double amount) {</span></span>\n<span class=\"line\"><span>        System.out.println(\"Paying \" + amount + \" using Alipay.\");</span></span>\n<span class=\"line\"><span>    }</span></span>\n<span class=\"line\"><span>}</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>// 微信支付</span></span>\n<span class=\"line\"><span>class WeChatPay implements PaymentMethod {</span></span>\n<span class=\"line\"><span>    @Override</span></span>\n<span class=\"line\"><span>    public void pay(double amount) {</span></span>\n<span class=\"line\"><span>        System.out.println(\"Paying \" + amount + \" using WeChat Pay.\");</span></span>\n<span class=\"line\"><span>    }</span></span>\n<span class=\"line\"><span>}</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>// 信用卡支付</span></span>\n<span class=\"line\"><span>class CreditCard implements PaymentMethod {</span></span>\n<span class=\"line\"><span>    @Override</span></span>\n<span class=\"line\"><span>    public void pay(double amount) {</span></span>\n<span class=\"line\"><span>        System.out.println(\"Paying \" + amount + \" using Credit Card.\");</span></span>\n<span class=\"line\"><span>    }</span></span>\n<span class=\"line\"><span>}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","readingTime":{"minutes":2.76,"words":828},"title":"使用组合而非继承的方式减少耦合","icon":"file","order":null,"type":"article"} }],
  ["/docs/code/backend/java/websocket.html", { loader: () => import(/* webpackChunkName: "docs_code_backend_java_websocket.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/backend/java/websocket.html.js"), meta: {"date":1728432000000,"excerpt":"<h2></h2>\n<h3>1. <strong>WebSocket 基础</strong></h3>\n<ul>\n<li>\n<p><strong>WebSocket 协议</strong>：</p>\n<ul>\n<li>WebSocket 是一种全双工通信协议，允许客户端和服务器之间建立持久连接，进行实时数据传输。</li>\n<li>以 WebSocket 被用于实现 AI 助手的实时聊天功能为例</li>\n</ul>\n</li>\n<li>\n<p><strong>STOMP 协议</strong>：</p>\n<ul>\n<li>STOMP（Simple Text Oriented Messaging Protocol）是基于 WebSocket 的高级消息协议，提供更丰富的消息路由和订阅机制。</li>\n<li>通过 <code>@EnableWebSocketMessageBroker</code> 和 <code>WebSocketMessageBrokerConfigurer</code> 配置了 STOMP 协议的支持。</li>\n</ul>\n</li>\n</ul>","readingTime":{"minutes":5.28,"words":1583},"title":"websocket基础","icon":"file","order":null,"type":"article"} }],
  ["/404.html", { loader: () => import(/* webpackChunkName: "404.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/404.html.js"), meta: {"title":""} }],
  ["/docs/", { loader: () => import(/* webpackChunkName: "docs_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/index.html.js"), meta: {"title":"Docs"} }],
  ["/templater/", { loader: () => import(/* webpackChunkName: "templater_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/templater/index.html.js"), meta: {"title":"Templater"} }],
  ["/docs/code/knowledge/", { loader: () => import(/* webpackChunkName: "docs_code_knowledge_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/knowledge/index.html.js"), meta: {"title":"Knowledge"} }],
  ["/docs/code/", { loader: () => import(/* webpackChunkName: "docs_code_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/index.html.js"), meta: {"title":"Code"} }],
  ["/docs/code/frontend/", { loader: () => import(/* webpackChunkName: "docs_code_frontend_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/frontend/index.html.js"), meta: {"title":"Frontend"} }],
  ["/docs/code/server/", { loader: () => import(/* webpackChunkName: "docs_code_server_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/server/index.html.js"), meta: {"title":"Server"} }],
  ["/docs/code/backend/java/", { loader: () => import(/* webpackChunkName: "docs_code_backend_java_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/backend/java/index.html.js"), meta: {"title":"Java"} }],
  ["/docs/code/backend/", { loader: () => import(/* webpackChunkName: "docs_code_backend_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/backend/index.html.js"), meta: {"title":"Backend"} }],
  ["/category/", { loader: () => import(/* webpackChunkName: "category_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/category/index.html.js"), meta: {"title":"分类","index":false} }],
  ["/category/%E7%AE%97%E6%B3%95/", { loader: () => import(/* webpackChunkName: "category_算法_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/category/算法/index.html.js"), meta: {"title":"算法 分类","index":false} }],
  ["/category/%E7%9F%A5%E8%AF%86/", { loader: () => import(/* webpackChunkName: "category_知识_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/category/知识/index.html.js"), meta: {"title":"知识 分类","index":false} }],
  ["/category/%E6%9C%8D%E5%8A%A1%E5%99%A8/", { loader: () => import(/* webpackChunkName: "category_服务器_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/category/服务器/index.html.js"), meta: {"title":"服务器 分类","index":false} }],
  ["/category/java/", { loader: () => import(/* webpackChunkName: "category_java_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/category/java/index.html.js"), meta: {"title":"Java 分类","index":false} }],
  ["/tag/", { loader: () => import(/* webpackChunkName: "tag_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/tag/index.html.js"), meta: {"title":"标签","index":false} }],
  ["/tag/leetcode/", { loader: () => import(/* webpackChunkName: "tag_leetcode_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/tag/leetcode/index.html.js"), meta: {"title":"标签: LeetCode","index":false} }],
  ["/tag/git/", { loader: () => import(/* webpackChunkName: "tag_git_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/tag/git/index.html.js"), meta: {"title":"标签: Git","index":false} }],
  ["/tag/nginx/", { loader: () => import(/* webpackChunkName: "tag_nginx_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/tag/nginx/index.html.js"), meta: {"title":"标签: nginx","index":false} }],
  ["/tag/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/", { loader: () => import(/* webpackChunkName: "tag_环境配置_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/tag/环境配置/index.html.js"), meta: {"title":"标签: 环境配置","index":false} }],
  ["/tag/javaweb/", { loader: () => import(/* webpackChunkName: "tag_javaweb_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/tag/javaweb/index.html.js"), meta: {"title":"标签: JavaWeb","index":false} }],
  ["/tag/%E5%A4%9A%E7%BA%BF%E7%A8%8B/", { loader: () => import(/* webpackChunkName: "tag_多线程_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/tag/多线程/index.html.js"), meta: {"title":"标签: 多线程","index":false} }],
  ["/tag/spring/", { loader: () => import(/* webpackChunkName: "tag_spring_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/tag/spring/index.html.js"), meta: {"title":"标签: Spring","index":false} }],
  ["/tag/springboot/", { loader: () => import(/* webpackChunkName: "tag_springboot_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/tag/springboot/index.html.js"), meta: {"title":"标签: SpringBoot","index":false} }],
  ["/tag/mybatisplus/", { loader: () => import(/* webpackChunkName: "tag_mybatisplus_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/tag/mybatisplus/index.html.js"), meta: {"title":"标签: MyBatisPlus","index":false} }],
  ["/tag/mybatis/", { loader: () => import(/* webpackChunkName: "tag_mybatis_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/tag/mybatis/index.html.js"), meta: {"title":"标签: MyBatis","index":false} }],
  ["/tag/%E6%A1%86%E6%9E%B6/", { loader: () => import(/* webpackChunkName: "tag_框架_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/tag/框架/index.html.js"), meta: {"title":"标签: 框架","index":false} }],
  ["/tag/%E9%9D%A2%E7%BB%8F/", { loader: () => import(/* webpackChunkName: "tag_面经_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/tag/面经/index.html.js"), meta: {"title":"标签: 面经","index":false} }],
  ["/tag/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/", { loader: () => import(/* webpackChunkName: "tag_设计模式_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/tag/设计模式/index.html.js"), meta: {"title":"标签: 设计模式","index":false} }],
  ["/article/", { loader: () => import(/* webpackChunkName: "article_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/article/index.html.js"), meta: {"title":"文章","index":false} }],
  ["/star/", { loader: () => import(/* webpackChunkName: "star_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/star/index.html.js"), meta: {"title":"星标","index":false} }],
  ["/timeline/", { loader: () => import(/* webpackChunkName: "timeline_index.html" */"/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/timeline/index.html.js"), meta: {"title":"时间轴","index":false} }],
]);
