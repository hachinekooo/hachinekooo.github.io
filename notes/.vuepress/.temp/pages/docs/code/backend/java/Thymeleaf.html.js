import comp from "/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/backend/java/Thymeleaf.html.vue"
const data = JSON.parse("{\"path\":\"/docs/code/backend/java/Thymeleaf.html\",\"title\":\"Thymeleaf快速入门\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"Thymeleaf快速入门\",\"icon\":\"file\",\"order\":null,\"tags\":null,\"description\":\"简介 JSP必须依赖Tomcat运行，不能直接运行在浏览器中 HTML可以直接运行在浏览器中，但是不能接收控制器传递的数据 Thymeleaf是一种既保留了HTML的后缀能够直接在浏览器运行的能力、又实现了JSP显示动态数据的功能——静能查看页面效果、动则可以显示数据 新建项目 新建项目时添加 thymeleaf 的 start 或者直接引入 pom....\",\"gitInclude\":[]},\"headers\":[{\"level\":2,\"title\":\"th:text\",\"slug\":\"th-text\",\"link\":\"#th-text\",\"children\":[]},{\"level\":2,\"title\":\"th:object\",\"slug\":\"th-object\",\"link\":\"#th-object\",\"children\":[]},{\"level\":2,\"title\":\"动态路径加载\",\"slug\":\"动态路径加载\",\"link\":\"#动态路径加载\",\"children\":[]},{\"level\":2,\"title\":\"th:each\",\"slug\":\"th-each\",\"link\":\"#th-each\",\"children\":[]},{\"level\":2,\"title\":\"th:if\",\"slug\":\"th-if\",\"link\":\"#th-if\",\"children\":[]}],\"readingTime\":{\"minutes\":3.86,\"words\":1157},\"filePathRelative\":\"docs/code/backend/java/Thymeleaf.md\",\"excerpt\":\"\\n<p>JSP必须依赖Tomcat运行，不能直接运行在浏览器中</p>\\n<p>HTML可以直接运行在浏览器中，但是不能接收控制器传递的数据</p>\\n<p>Thymeleaf是一种既保留了HTML的后缀能够直接在浏览器运行的能力、又实现了JSP显示动态数据的功能——静能查看页面效果、动则可以显示数据</p>\\n<h1>新建项目</h1>\\n<blockquote>\\n<p>新建项目时添加 thymeleaf 的 start 或者直接引入</p>\\n</blockquote>\\n<p><code>pom.xml</code></p>\\n<div class=\\\"language-xml line-numbers-mode\\\" data-highlighter=\\\"shiki\\\" data-ext=\\\"xml\\\" data-title=\\\"xml\\\" style=\\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\\"><pre class=\\\"shiki shiki-themes one-light one-dark-pro vp-code\\\"><code><span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">&lt;</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\\">dependency</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">    &lt;</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\\">groupId</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">&gt;org.springframework.boot&lt;/</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\\">groupId</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">    &lt;</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\\">artifactId</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">&gt;spring-boot-starter-thymeleaf&lt;/</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\\">artifactId</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">&lt;/</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\\">dependency</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">&gt;</span></span></code></pre>\\n<div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\" style=\\\"counter-reset:line-number 0\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
