import comp from "/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/backend/java/mltiThreading.html.vue"
const data = JSON.parse("{\"path\":\"/docs/code/backend/java/mltiThreading.html\",\"title\":\"Java多线程\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"Java多线程\",\"icon\":\"file\",\"order\":null,\"category\":[\"Java\"],\"tags\":[\"多线程\"],\"description\":\"ThreadLocal ThreadLocal 的实现原理 ThreadLocal 本质上是一个线程隔离的变量存储机制，它的核心实现主要依赖以下几个关键部分： ThreadLocal 对象本身不存储值，而是作为一个 key 来访问线程中的ThreadLocalMap Thread 类中有一个 ThreadLocalMap 类型的成员变量 threadL...\",\"head\":[[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Java多线程\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":\\\"2025-04-03T14:09:04.000Z\\\",\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"WangWenpeng\\\",\\\"url\\\":\\\"hachinekooo.github.io\\\"}]}\"],[\"meta\",{\"property\":\"og:url\",\"content\":\"https://hachinekooo.github.io/docs/code/backend/java/mltiThreading.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"乐观的小八\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Java多线程\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"ThreadLocal ThreadLocal 的实现原理 ThreadLocal 本质上是一个线程隔离的变量存储机制，它的核心实现主要依赖以下几个关键部分： ThreadLocal 对象本身不存储值，而是作为一个 key 来访问线程中的ThreadLocalMap Thread 类中有一个 ThreadLocalMap 类型的成员变量 threadL...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2025-04-03T14:09:04.000Z\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"多线程\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2025-04-03T14:09:04.000Z\"}]]},\"git\":{\"createdTime\":1743689344000,\"updatedTime\":1743689344000,\"contributors\":[{\"name\":\"blueboySalvat\",\"username\":\"blueboySalvat\",\"email\":\"blueboysalvat@163.com\",\"commits\":1,\"url\":\"https://github.com/blueboySalvat\"}]},\"readingTime\":{\"minutes\":3.98,\"words\":1194},\"filePathRelative\":\"docs/code/backend/java/mltiThreading.md\",\"excerpt\":\"<h2>ThreadLocal</h2>\\n<h3>ThreadLocal 的实现原理</h3>\\n<p>ThreadLocal 本质上是一个线程隔离的变量存储机制，它的核心实现主要依赖以下几个关键部分：</p>\\n<ol>\\n<li>\\n<p>ThreadLocal 对象本身不存储值，而是作为一个 key 来访问<code>线程中的ThreadLocalMap</code></p>\\n</li>\\n<li>\\n<p>Thread 类中有一个 ThreadLocalMap 类型的成员变量 threadLocals:</p>\\n</li>\\n</ol>\\n<div class=\\\"language-java line-numbers-mode\\\" data-highlighter=\\\"shiki\\\" data-ext=\\\"java\\\" style=\\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\\"><pre class=\\\"shiki shiki-themes one-light one-dark-pro vp-code\\\"><code><span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">class</span><span style=\\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\\"> Thread</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\\">    ThreadLocalMap</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\\"> threadLocals </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">=</span><span style=\\\"--shiki-light:#986801;--shiki-dark:#D19A66\\\"> null</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">    //...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">}</span></span></code></pre>\\n<div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\" style=\\\"counter-reset:line-number 0\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")
export { comp, data }
