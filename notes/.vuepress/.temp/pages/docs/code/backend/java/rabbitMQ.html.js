import comp from "/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/backend/java/rabbitMQ.html.vue"
const data = JSON.parse("{\"path\":\"/docs/code/backend/java/rabbitMQ.html\",\"title\":\"RabbitMQ的使用\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"RabbitMQ的使用\",\"icon\":\"file\",\"order\":null,\"date\":\"2025-03-19T00:00:00.000Z\",\"category\":[\"中间件\"],\"tags\":[\"RabbitMQ\"],\"description\":\"基本概念 同步调用 项目一变大同步就不大适用了： 可拓展性差。调用 A，再调用 B，再调用 C，后续拓展需要修改调用这部分的代码。 同步调用，调用者需要等待服务提供者执行完返回结果后，才能继续向下执行 容易出现级联失效的问题 异步调用 异步调用方式其实就是基于消息通知的方式。 消息发送者：投递消息的人 消息 Broker（消息代理）：管理、暂存、转发消...\",\"head\":[[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"RabbitMQ的使用\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2025-03-19T00:00:00.000Z\\\",\\\"dateModified\\\":\\\"2025-04-03T14:09:04.000Z\\\",\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"WangWenpeng\\\",\\\"url\\\":\\\"blueboysalvat.github.io\\\"}]}\"],[\"meta\",{\"property\":\"og:url\",\"content\":\"https://blueboysalvat.github.io/docs/code/backend/java/rabbitMQ.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"忧郁男孩的救赎\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"RabbitMQ的使用\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"基本概念 同步调用 项目一变大同步就不大适用了： 可拓展性差。调用 A，再调用 B，再调用 C，后续拓展需要修改调用这部分的代码。 同步调用，调用者需要等待服务提供者执行完返回结果后，才能继续向下执行 容易出现级联失效的问题 异步调用 异步调用方式其实就是基于消息通知的方式。 消息发送者：投递消息的人 消息 Broker（消息代理）：管理、暂存、转发消...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2025-04-03T14:09:04.000Z\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"RabbitMQ\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2025-03-19T00:00:00.000Z\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2025-04-03T14:09:04.000Z\"}]]},\"git\":{\"createdTime\":1743689344000,\"updatedTime\":1743689344000,\"contributors\":[{\"name\":\"blueboySalvat\",\"username\":\"blueboySalvat\",\"email\":\"blueboysalvat@163.com\",\"commits\":1,\"url\":\"https://github.com/blueboySalvat\"}]},\"readingTime\":{\"minutes\":4.51,\"words\":1353},\"filePathRelative\":\"docs/code/backend/java/rabbitMQ.md\",\"excerpt\":\"<h2>基本概念</h2>\\n<h3>同步调用</h3>\\n<p>项目一变大同步就不大适用了：</p>\\n<ul>\\n<li>可拓展性差。调用 A，再调用 B，再调用 C，后续拓展需要修改调用这部分的代码。</li>\\n<li>同步调用，调用者需要等待服务提供者执行完返回结果后，才能继续向下执行</li>\\n<li>容易出现级联失效的问题</li>\\n</ul>\\n<h3>异步调用</h3>\\n<p>异步调用方式其实就是基于消息通知的方式。</p>\\n<ul>\\n<li>消息发送者：投递消息的人</li>\\n<li>消息 Broker（消息代理）：管理、暂存、转发消息</li>\\n<li>消息接收者：接收和处理消息的人</li>\\n</ul>\",\"autoDesc\":true}")
export { comp, data }
