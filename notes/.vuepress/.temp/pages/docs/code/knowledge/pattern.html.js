import comp from "/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/knowledge/pattern.html.vue"
const data = JSON.parse("{\"path\":\"/docs/code/knowledge/pattern.html\",\"title\":\"设计模式\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"设计模式\",\"icon\":\"file\",\"order\":null,\"date\":\"2024-10-02T00:00:00.000Z\",\"tags\":null,\"description\":\"单例设计模式 饿汉式 SingleModel1.java 懒汉式 SingleModel2.java 装饰器模式 装饰器模式的由来 装饰器模式是一种结构型设计模式，它允许动态地为对象添加额外的行为，而不会影响其他对象。装饰器模式通过将对象包装在装饰器类中，来扩展对象的功能。 装饰器模式的核心角色 Component（组件）： 定义一个接口，表示被装饰的...\",\"head\":[[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"设计模式\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2024-10-02T00:00:00.000Z\\\",\\\"dateModified\\\":\\\"2025-04-03T14:09:04.000Z\\\",\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"WangWenpeng\\\",\\\"url\\\":\\\"hachinekooo.github.io\\\"}]}\"],[\"meta\",{\"property\":\"og:url\",\"content\":\"https://hachinekooo.github.io/docs/code/knowledge/pattern.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"乐观的小八\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"设计模式\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"单例设计模式 饿汉式 SingleModel1.java 懒汉式 SingleModel2.java 装饰器模式 装饰器模式的由来 装饰器模式是一种结构型设计模式，它允许动态地为对象添加额外的行为，而不会影响其他对象。装饰器模式通过将对象包装在装饰器类中，来扩展对象的功能。 装饰器模式的核心角色 Component（组件）： 定义一个接口，表示被装饰的...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2025-04-03T14:09:04.000Z\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2024-10-02T00:00:00.000Z\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2025-04-03T14:09:04.000Z\"}]]},\"git\":{\"createdTime\":1743689344000,\"updatedTime\":1743689344000,\"contributors\":[{\"name\":\"blueboySalvat\",\"username\":\"blueboySalvat\",\"email\":\"blueboysalvat@163.com\",\"commits\":1,\"url\":\"https://github.com/blueboySalvat\"}]},\"readingTime\":{\"minutes\":15.43,\"words\":4629},\"filePathRelative\":\"docs/code/knowledge/pattern.md\",\"excerpt\":\"<h2>单例设计模式</h2>\\n<h3>饿汉式</h3>\\n<p><code>SingleModel1.java</code></p>\\n<div class=\\\"language-java line-numbers-mode\\\" data-highlighter=\\\"shiki\\\" data-ext=\\\"java\\\" style=\\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\\"><pre class=\\\"shiki shiki-themes one-light one-dark-pro vp-code\\\"><code><span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">public</span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\"> class</span><span style=\\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\\"> SingleModel1</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> {</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\\">  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">    //使用 static ，让类在加载时就直接创建好一个对象。  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">    private</span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\"> static</span><span style=\\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\\"> SingleModel1</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\\"> obj </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">=</span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\"> new</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\"> SingleModel1</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\\">()</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">;</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\\">  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\\">      </span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">    //构造方法，私有之后，让外不能随便调用这里进行创建对象了。  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">    private</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\"> SingleModel1</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(){  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">          </span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">    }</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\\">  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">    //static 才能访问 static，public公共的供外调用  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">    public</span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\"> static</span><span style=\\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\\"> SingleModel1</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\"> getInstance</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">()</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> {  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">        return</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> obj;  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">    }</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\\">  </span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">}</span></span></code></pre>\\n<div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\" style=\\\"counter-reset:line-number 0\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")
export { comp, data }
