import comp from "/Users/wangwenpeng/Code/area/notes/.vuepress/.temp/pages/docs/code/database/sql.html.vue"
const data = JSON.parse("{\"path\":\"/docs/code/database/sql.html\",\"title\":\"常见的sql应用场景\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"常见的sql应用场景\",\"icon\":\"file\",\"order\":null,\"category\":[\"数据库\"],\"tags\":[\"Mysql\"],\"description\":\"连续登陆问题 窗口函数是为每行返回一个结果的函数。常见的有 sum、max、min row_number(每行分配唯一序号)、rank(分配排名，相同值排名相同，后续排名跳过) lead(获取后续行)、lag(获取前面行) 假设 Logs 表中有以下数据： 运行子查询后，生成的虚表如下：\",\"gitInclude\":[],\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://blueboysalvat.github.io/docs/code/database/sql.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"忧郁男孩的救赎\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"常见的sql应用场景\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"连续登陆问题 窗口函数是为每行返回一个结果的函数。常见的有 sum、max、min row_number(每行分配唯一序号)、rank(分配排名，相同值排名相同，后续排名跳过) lead(获取后续行)、lag(获取前面行) 假设 Logs 表中有以下数据： 运行子查询后，生成的虚表如下：\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"WangWenpeng\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"Mysql\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"常见的sql应用场景\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"WangWenpeng\\\",\\\"url\\\":\\\"blueboysalvat.github.io\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"\",\"slug\":\"\",\"link\":\"#\",\"children\":[{\"level\":3,\"title\":\"连续登陆问题\",\"slug\":\"连续登陆问题\",\"link\":\"#连续登陆问题\",\"children\":[]}]}],\"readingTime\":{\"minutes\":0.64,\"words\":193},\"filePathRelative\":\"docs/code/database/sql.md\",\"excerpt\":\"<h2></h2>\\n<h3>连续登陆问题</h3>\\n<p>窗口函数是为每行返回一个结果的函数。常见的有</p>\\n<ul>\\n<li>sum、max、min</li>\\n<li>row_number(每行分配唯一序号)、rank(分配排名，相同值排名相同，后续排名跳过)</li>\\n<li>lead(获取后续行)、lag(获取前面行)</li>\\n</ul>\\n<div class=\\\"language-mysql line-numbers-mode\\\" data-highlighter=\\\"shiki\\\" data-ext=\\\"mysql\\\" data-title=\\\"mysql\\\" style=\\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\\"><pre class=\\\"shiki shiki-themes one-light one-dark-pro vp-code\\\"><code><span class=\\\"line\\\"><span>select distinct</span></span>\\n<span class=\\\"line\\\"><span>    t.num as ConsecutiveNums</span></span>\\n<span class=\\\"line\\\"><span>from</span></span>\\n<span class=\\\"line\\\"><span>    (</span></span>\\n<span class=\\\"line\\\"><span>        select</span></span>\\n<span class=\\\"line\\\"><span>            num,</span></span>\\n<span class=\\\"line\\\"><span>            LAG(num, 1) over(order by id) as prev1,</span></span>\\n<span class=\\\"line\\\"><span>            LAG(num, 2) over(order by id) as prev2</span></span>\\n<span class=\\\"line\\\"><span>        from</span></span>\\n<span class=\\\"line\\\"><span>            Logs</span></span>\\n<span class=\\\"line\\\"><span>    ) as t</span></span>\\n<span class=\\\"line\\\"><span>where t.num = prev1 and t.num = prev2</span></span></code></pre>\\n<div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\" style=\\\"counter-reset:line-number 0\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
