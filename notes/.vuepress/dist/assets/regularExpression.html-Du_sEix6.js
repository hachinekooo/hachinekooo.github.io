import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as k,a as n,b as e,d as i,e as a,w as t,r as d,o as h}from"./app-CkV7V9eV.js";const r={};function o(B,s){const l=d("font");return h(),k("div",null,[n("ol",null,[s[12]||(s[12]=e("<li><p>任意一个字符表示匹配任意对应的字符，如 <code>a</code> 匹配 <code>a</code>，<code>7</code>匹配<code>7</code>，<code>-</code>匹配<code>-</code>。</p></li><li><p><code>[]</code>代表匹配中括号中其中任一个字符，如<code>[abc]</code>匹配 <code>a</code> 或 <code>b</code> 或 <code>c</code>。</p></li><li><p><code>-</code>在中括号里面和外面代表含义不同，如在外时，就匹配<code>-</code>，如果在中括号内<code>[a-b]</code>表示匹配26个小写字母中的任一个；<code>[a-zA-Z]</code>匹配大小写共52个字母中任一个；<code>[0-9]</code>匹配十个数字中任一个。</p></li><li><p><code>^</code> 在中括号里面和外面含义不同，如在外时，就表示开头，如 <code>^7[0-9]</code> 表示匹配开头是7的，且第二位是任一数字的字符串；如果在中括号里面，表示除了这个字符之外的任意字符(包括数字，特殊字符)，如 <code>[^abc]</code> 表示匹配除去 abc 之外的其他任一字符。</p></li>",4)),n("li",null,[n("p",null,[s[1]||(s[1]=n("code",null,".",-1)),s[2]||(s[2]=i("表示匹配")),a(l,{color:"#de7802"},{default:t(()=>s[0]||(s[0]=[i("任意的字符")])),_:1,__:[0]}),s[3]||(s[3]=i("。"))])]),n("li",null,[n("p",null,[s[5]||(s[5]=n("code",null,"\\d",-1)),s[6]||(s[6]=i(" 表示")),a(l,{color:"#de7802"},{default:t(()=>s[4]||(s[4]=[i("数字")])),_:1,__:[4]}),s[7]||(s[7]=i("。"))])]),n("li",null,[n("p",null,[s[9]||(s[9]=n("code",null,"\\D",-1)),s[10]||(s[10]=i(" 表示")),a(l,{color:"#de7802"},{default:t(()=>s[8]||(s[8]=[i("非数字")])),_:1,__:[8]}),s[11]||(s[11]=i("。"))])])]),n("p",null,[s[14]||(s[14]=i("8. ")),s[15]||(s[15]=n("code",null,"\\s",-1)),s[16]||(s[16]=i(" 表示由")),a(l,{color:"#de7802"},{default:t(()=>s[13]||(s[13]=[i("空字符")])),_:1,__:[13]}),s[17]||(s[17]=i("组成，")),s[18]||(s[18]=n("code",null,"[\\t\\n\\r\\x\\f]",-1)),s[19]||(s[19]=i("。"))]),s[78]||(s[78]=n("p",null,[i("9. "),n("code",null,"\\S"),i(" 表示由非空字符组成，"),n("code",null,"[^\\s]"),i("。")],-1)),n("p",null,[s[23]||(s[23]=i("10. ")),s[24]||(s[24]=n("code",null,"\\w",-1)),s[25]||(s[25]=i(" 表示")),a(l,{color:"#de7802"},{default:t(()=>s[20]||(s[20]=[i("字母")])),_:1,__:[20]}),s[26]||(s[26]=i("、")),a(l,{color:"#de7802"},{default:t(()=>s[21]||(s[21]=[i("数字")])),_:1,__:[21]}),s[27]||(s[27]=i("、")),a(l,{color:"#de7802"},{default:t(()=>s[22]||(s[22]=[i("下划线")])),_:1,__:[22]}),s[28]||(s[28]=i("，")),s[29]||(s[29]=n("code",null,"[a-zA-Z0-9_]",-1)),s[30]||(s[30]=i("。"))]),n("p",null,[s[32]||(s[32]=i("11. ")),s[33]||(s[33]=n("code",null,"\\W",-1)),s[34]||(s[34]=i("表示")),a(l,{color:"#de7802"},{default:t(()=>s[31]||(s[31]=[i("不是")])),_:1,__:[31]}),s[35]||(s[35]=i("由字母、数字、下划线组成。"))]),n("p",null,[s[38]||(s[38]=i("12. ")),s[39]||(s[39]=n("code",null,"?",-1)),s[40]||(s[40]=i(" 表示出现")),a(l,{color:"#de7802"},{default:t(()=>s[36]||(s[36]=[i("0次")])),_:1,__:[36]}),s[41]||(s[41]=i("或")),a(l,{color:"#de7802"},{default:t(()=>s[37]||(s[37]=[i("1次")])),_:1,__:[37]}),s[42]||(s[42]=i("。"))]),n("p",null,[s[45]||(s[45]=i("13. ")),s[46]||(s[46]=n("code",null,"+",-1)),s[47]||(s[47]=i("表示出现")),a(l,{color:"#de7802"},{default:t(()=>s[43]||(s[43]=[i("1次")])),_:1,__:[43]}),s[48]||(s[48]=i("或")),a(l,{color:"#de7802"},{default:t(()=>s[44]||(s[44]=[i("多次")])),_:1,__:[44]}),s[49]||(s[49]=i("。"))]),n("p",null,[s[53]||(s[53]=i("14. ")),s[54]||(s[54]=n("code",null,"*",-1)),s[55]||(s[55]=i("表示出现")),a(l,{color:"#de7802"},{default:t(()=>s[50]||(s[50]=[i("0次")])),_:1,__:[50]}),s[56]||(s[56]=i("、")),a(l,{color:"#de7802"},{default:t(()=>s[51]||(s[51]=[i("1次")])),_:1,__:[51]}),s[57]||(s[57]=i("或")),a(l,{color:"#de7802"},{default:t(()=>s[52]||(s[52]=[i("多次")])),_:1,__:[52]}),s[58]||(s[58]=i("。"))]),n("p",null,[s[60]||(s[60]=i("15. ")),s[61]||(s[61]=n("code",null,"{n}",-1)),s[62]||(s[62]=i("表示出现")),a(l,{color:"#de7802"},{default:t(()=>s[59]||(s[59]=[i("n次")])),_:1,__:[59]}),s[63]||(s[63]=i("。"))]),n("p",null,[s[65]||(s[65]=i("16. ")),s[66]||(s[66]=n("code",null,"{n,m}",-1)),s[67]||(s[67]=i("表示出现")),a(l,{color:"#de7802"},{default:t(()=>s[64]||(s[64]=[i("n~m次")])),_:1,__:[64]}),s[68]||(s[68]=i("。"))]),n("p",null,[s[70]||(s[70]=i("17. ")),s[71]||(s[71]=n("code",null,"{n,}",-1)),s[72]||(s[72]=i("表示出现")),a(l,{color:"#de7802"},{default:t(()=>s[69]||(s[69]=[i("n次或n次以上")])),_:1,__:[69]}),s[73]||(s[73]=i("。"))]),s[79]||(s[79]=n("p",null,[i("18. "),n("code",null,"XY"),i("表示X后面跟着Y，这里X和Y分别是正则表达式的一部分。")],-1)),s[80]||(s[80]=n("p",null,[i("19. "),n("code",null,"X|Y"),i('表示X或Y，比如"food|f"匹配的是foo（d或f），而"(food)|f"匹配的是food或f。')],-1)),n("p",null,[s[75]||(s[75]=i("20. ")),s[76]||(s[76]=n("code",null,"(X)",-1)),s[77]||(s[77]=i("子表达式，将X看做是")),a(l,{color:"#de7802"},{default:t(()=>s[74]||(s[74]=[i("一个整体")])),_:1,__:[74]})]),s[81]||(s[81]=e(`<h2 id="在-javascript-中使用" tabindex="-1"><a class="header-anchor" href="#在-javascript-中使用"><span>在 JavaScript 中使用</span></a></h2><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&lt;!</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">DOCTYPE</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> html</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">html</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> lang</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;en&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">meta</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> charset</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;UTF-8&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Title&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg1 = /^[0-9]$/;   //匹配一个数字  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg1.test(&quot;1&quot;));; //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg1.test(&quot;11&quot;));; //false  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg2 = /^[0-9][0-9]$/;  //匹配两个数字  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg3 = /^[a-zA-Z][0-9][0-9]$/;  //匹配一个字母连个数字  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg3.test(&quot;a11&quot;));  //ture  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg3.test(&quot;111&quot;));  //false  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg4 = /^[0-9]</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$/;   //匹配数字(10次)  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg4.test(&quot;1234567890&quot;));    //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg4.test(&quot;12345&quot;));    //false  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg5 = /^[0-9]</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$/; //匹配数字(6次-10次)  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg5.test(&quot;123456&quot;));    //ture  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg5.test(&quot;12345&quot;));     //false  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg6 = /^[0-9]+$/;   //匹配数字(1次或多次)  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg6.test(&quot;&quot;)); //false  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg6.test(&quot;111&quot;));   //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg7 = /^[0-9]?$/;   //匹配数字(0次或1次)  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg7.test(&quot;&quot;)); //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg7.test(&quot;1&quot;));   //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg7.test(&quot;1111111111&quot;));   //false  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg8 = /^[0-9]*$/;   //匹配数字(0次或多次)  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg8.test(&quot;&quot;)); //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg8.test(&quot;11&quot;));   //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg8.test(&quot;1111111111&quot;));   //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg9 = /^\\d</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$/;   //匹配数字(6次-10次)  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg9.test(&quot;12345&quot;));    //false  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg9.test(&quot;123456&quot;));   //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg10 = /^\\w</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$/;   //匹配字母数字下划线(6次-10次)  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg9.test(&quot;12345&quot;));    //false  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg9.test(&quot;123456&quot;));   //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg11 = /^.</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$/;   //匹配任意字符3次  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg11.test(&quot;---&quot;));  //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg12 = /^[a-zA-Z]\\w</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">9</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$/;   //匹配以字母开头，以数字,字母,下划线组成的6-10位的字符串  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg12.test(&quot;12345&quot;));    //false  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg12.test(&quot;a123456&quot;));   //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    var reg13 = /^\\\\\\\\$/; //匹配2个反斜杠  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    console.log(reg13.test(&quot;\\\\\\\\&quot;)); //true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="在-java-中使用" tabindex="-1"><a class="header-anchor" href="#在-java-中使用"><span>在 Java 中使用</span></a></h2><p>在 java 中使用需要两个反斜杠来表示一个反斜杠</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> TestRegx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Test</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> testRegx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {  </span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> regx</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">d{5}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//匹配5位数字  </span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;12345&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">matches</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(regx));  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> regx2</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">d{5}</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">*&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//匹配5位数字和一个星花  </span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> str2</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;12345*&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">str2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">matches</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(regx2));  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//true  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5))])}const u=p(r,[["render",o]]),y=JSON.parse('{"path":"/docs/code/knowledge/regularExpression.html","title":"正则表达式","lang":"zh-CN","frontmatter":{"title":"正则表达式","icon":"file","order":null,"date":"2024-01-20T00:00:00.000Z","category":["知识"],"tags":null,"description":"任意一个字符表示匹配任意对应的字符，如 a 匹配 a，7匹配7，-匹配-。 []代表匹配中括号中其中任一个字符，如[abc]匹配 a 或 b 或 c。 -在中括号里面和外面代表含义不同，如在外时，就匹配-，如果在中括号内[a-b]表示匹配26个小写字母中的任一个；[a-zA-Z]匹配大小写共52个字母中任一个；[0-9]匹配十个数字中任一个。 ^ 在中...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"正则表达式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-20T00:00:00.000Z\\",\\"dateModified\\":\\"2025-04-03T14:09:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WangWenpeng\\",\\"url\\":\\"hachinekooo.github.io\\"}]}"],["meta",{"property":"og:url","content":"https://hachinekooo.github.io/docs/code/knowledge/regularExpression.html"}],["meta",{"property":"og:site_name","content":"乐观的小八"}],["meta",{"property":"og:title","content":"正则表达式"}],["meta",{"property":"og:description","content":"任意一个字符表示匹配任意对应的字符，如 a 匹配 a，7匹配7，-匹配-。 []代表匹配中括号中其中任一个字符，如[abc]匹配 a 或 b 或 c。 -在中括号里面和外面代表含义不同，如在外时，就匹配-，如果在中括号内[a-b]表示匹配26个小写字母中的任一个；[a-zA-Z]匹配大小写共52个字母中任一个；[0-9]匹配十个数字中任一个。 ^ 在中..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-03T14:09:04.000Z"}],["meta",{"property":"article:published_time","content":"2024-01-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-03T14:09:04.000Z"}]]},"git":{"createdTime":1743689344000,"updatedTime":1743689344000,"contributors":[{"name":"blueboySalvat","username":"blueboySalvat","email":"blueboysalvat@163.com","commits":1,"url":"https://github.com/blueboySalvat"}]},"readingTime":{"minutes":3.2,"words":959},"filePathRelative":"docs/code/knowledge/regularExpression.md","excerpt":"<ol>\\n<li>\\n<p>任意一个字符表示匹配任意对应的字符，如 <code>a</code> 匹配 <code>a</code>，<code>7</code>匹配<code>7</code>，<code>-</code>匹配<code>-</code>。</p>\\n</li>\\n<li>\\n<p><code>[]</code>代表匹配中括号中其中任一个字符，如<code>[abc]</code>匹配 <code>a</code> 或 <code>b</code> 或 <code>c</code>。</p>\\n</li>\\n<li>\\n<p><code>-</code>在中括号里面和外面代表含义不同，如在外时，就匹配<code>-</code>，如果在中括号内<code>[a-b]</code>表示匹配26个小写字母中的任一个；<code>[a-zA-Z]</code>匹配大小写共52个字母中任一个；<code>[0-9]</code>匹配十个数字中任一个。</p>\\n</li>\\n<li>\\n<p><code>^</code> 在中括号里面和外面含义不同，如在外时，就表示开头，如 <code>^7[0-9]</code> 表示匹配开头是7的，且第二位是任一数字的字符串；如果在中括号里面，表示除了这个字符之外的任意字符(包括数字，特殊字符)，如 <code>[^abc]</code> 表示匹配除去 abc 之外的其他任一字符。</p>\\n</li>\\n<li>\\n<p><code>.</code>表示匹配。</p>\\n</li>\\n<li>\\n<p><code>\\\\d</code> 表示。</p>\\n</li>\\n<li>\\n<p><code>\\\\D</code> 表示。</p>\\n</li>\\n</ol>","autoDesc":true}');export{u as comp,y as data};
